{"version":3,"sources":["webpack:///./src/pages/about.js"],"names":["query","AboutPage","doc","data","prismic","about","className","styles","hero","text_area","RichText","render","title","intro","Tag","hero_image","fluid","imageSharp","childImageSharp","backgroundColor","jobs_skills_wrap","skills","body","map","slice","type","fields","skill","skill_title","skill_text","jobs","mobileHeader","job","index","startDate","Date","start_date","formattedStartDate","Intl","DateTimeFormat","year","month","format","endDate","end_date","formattedEndDate","realDate","job_title","date","company_city","company","city"],"mappings":"6FAAA,gKA6GaA,EAAK,aAsCHC,UA3IG,SAAC,GAAc,IAEzBC,EAFwB,EAAXC,KAEFC,QAAQC,MAC1B,OAAKH,EAGF,kBAAC,IAAD,KAEE,6BAASI,UAAWC,IAAOC,MAEzB,yBAAKF,UAAWC,IAAOE,WACrB,kBAAC,IAAD,MACCC,WAASC,OAAOT,EAAIU,OACpBF,WAASC,OAAOT,EAAIW,QAGvB,kBAAC,IAAD,CACEC,IAAI,UACJR,UAAWC,IAAOQ,WAClBC,MAAOd,EAAIe,WAAWC,gBAAgBF,MACtCG,gBAAe,aAMnB,6BAASb,UAAWC,IAAOa,kBAEzB,yBAAKd,UAAWC,IAAOc,QAEpBnB,EAAIoB,KAAKC,KAAI,SAAAC,GAEZ,GAAmB,WAAfA,EAAMC,KAEV,OAAOD,EAAME,OAAOH,KAAI,SAAAI,GAEtB,OACE,yBAAKrB,UAAWC,IAAOoB,OACpBjB,WAASC,OAAOgB,EAAMC,aACtBlB,WAASC,OAAOgB,EAAME,oBAUjC,yBAAKvB,UAAWC,IAAOuB,MAErB,wBAAIxB,UAAWC,IAAOwB,cAAtB,mBAEC7B,EAAIoB,KAAKC,KAAI,SAAAC,GAEZ,GAAmB,iBAAfA,EAAMC,KAEV,OAAOD,EAAME,OAAOH,KAAI,SAAUS,EAAKC,GAErC,IAAMC,EAAYC,eAAKH,EAAII,YACrBC,EAAqBC,KAAKC,eAAe,QAAQ,CACrDC,KAAM,UACNC,MAAO,SACNC,OAAOR,GAEJS,EAAUR,eAAKH,EAAIY,UACnBC,EAAmBP,KAAKC,eAAe,QAAQ,CACnDC,KAAM,UACNC,MAAO,SACNC,OAAOC,GAENG,EAAsB,IAAVb,EAAe,UAAYY,EAE3C,OACE,yBAAKvC,UAAWC,IAAOyB,KAErB,wBAAI1B,UAAWC,IAAOK,OACnBoB,EAAIe,WAEP,yBAAKzC,UAAWC,IAAOyC,MACpBX,EADH,MAC0BS,GAE1B,yBAAKxC,UAAWC,IAAO0C,cACpBjB,EAAIkB,QADP,MACmBlB,EAAImB,gBAhFvB","file":"component---src-pages-about-js-e0b52f75024111b8356f.js","sourcesContent":["import React from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport { RichText, Date} from \"prismic-reactjs\";\r\nimport styles from \"../styles/modules/about.module.scss\";\r\nimport Menu from \"../components/menu\";\r\nimport BackgroundImage from 'gatsby-background-image';\r\n\r\nconst AboutPage = ({ data }) => {\r\n\r\n  const doc = data.prismic.about;\r\n\tif (!doc) return null;\r\n  \r\n  return (\r\n    <Layout>\r\n\r\n      <article className={styles.hero}>\r\n\r\n        <div className={styles.text_area}>\r\n          <Menu />\r\n          {RichText.render(doc.title)}\r\n          {RichText.render(doc.intro)}\r\n        </div>\r\n\r\n        <BackgroundImage \r\n          Tag=\"section\"\r\n          className={styles.hero_image}\r\n          fluid={doc.imageSharp.childImageSharp.fluid}\r\n          backgroundColor={`#9CDEF2`}\r\n          >\r\n        </BackgroundImage>\r\n\r\n      </article>\r\n\r\n      <article className={styles.jobs_skills_wrap}>\r\n\r\n        <div className={styles.skills}>\r\n        \r\n          {doc.body.map(slice => {\r\n\r\n            if (slice.type === 'skills')\r\n\r\n            return slice.fields.map(skill => {\r\n\r\n              return (\r\n                <div className={styles.skill} >\r\n                  {RichText.render(skill.skill_title)}\r\n                  {RichText.render(skill.skill_text)}\r\n                </div>\r\n              )\r\n\r\n            });\r\n            \r\n          })}\r\n\r\n        </div>\r\n\r\n        <div className={styles.jobs}>\r\n\r\n          <h1 className={styles.mobileHeader}>Work Experience</h1>\r\n          \r\n          {doc.body.map(slice => {\r\n\r\n            if (slice.type === 'job_timeline')\r\n\r\n            return slice.fields.map(function (job, index) {\r\n\r\n              const startDate = Date(job.start_date);\r\n              const formattedStartDate = Intl.DateTimeFormat('en-US',{\r\n                year: 'numeric',\r\n                month: 'long'\r\n              }).format(startDate);\r\n\r\n              const endDate = Date(job.end_date);\r\n              const formattedEndDate = Intl.DateTimeFormat('en-US',{\r\n                year: 'numeric',\r\n                month: 'long'\r\n              }).format(endDate);\r\n\r\n              let realDate = (index === 0) ? 'Present' : formattedEndDate; \r\n\r\n              return (\r\n                <div className={styles.job}>\r\n\r\n                  <h3 className={styles.title}>\r\n                    {job.job_title}\r\n                  </h3>\r\n                  <div className={styles.date}>\r\n                    {formattedStartDate} - {realDate}\r\n                  </div>\r\n                  <div className={styles.company_city}>\r\n                    {job.company} | {job.city}\r\n                  </div>\r\n\r\n                </div>\r\n              )\r\n\r\n            });\r\n            \r\n          })}\r\n\r\n        </div>        \r\n\r\n      </article>  \r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query getAbout {\r\n    prismic {\r\n      about(uid: \"about\", lang: \"en-us\") {\r\n        title\r\n        intro\r\n        image\r\n          imageSharp {\r\n              childImageSharp {\r\n                fluid(quality: 100, maxWidth: 960) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n          }\r\n        body {\r\n          ... on PRISMIC_AboutBodySkills {\r\n            type\r\n            fields {\r\n              skill_text\r\n              skill_title\r\n            }\r\n          }\r\n          ... on PRISMIC_AboutBodyJob_timeline {\r\n            fields {\r\n              city\r\n              company\r\n              end_date\r\n              job_title\r\n              start_date\r\n            }\r\n            type\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AboutPage;\r\n"],"sourceRoot":""}